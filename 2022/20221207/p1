#!/bin/bash

INPUT=input.txt
(( TEST )) && INPUT=test.txt
(( TEST )) && DEBUG=1

function debug
{
	(( DEBUG )) && echo "$@" >&2
}

function error
{
	echo "$@" >&2
	exit 1
}

function CDRoot
{
	CURDIR='ROOT'
	CURPATH="$CURDIR"
	(( DIRTREE[$CURPATH] = 0 ))
	debug "Starting in Root"
}

function CDUp
{
	local LOC
	LOC="${CURPATH%_$CURDIR}"
	if [[ "$CURPATH" != "${LOC}_$CURDIR" ]]; then
		error "Failed to move to parent of $CURPATH from $CURDIR"
	fi
	(( DIRTREE[$LOC] += DIRTREE[$CURPATH] ))
	CURDIR="${LOC##*_}"
	CURPATH="$LOC"
	debug "Back to ${CURPATH//_/\/}"
}

function CDDir
{
	CURDIR="${1#$ cd }"
	CURPATH="${CURPATH}_$CURDIR"
	(( DIRTREE[$CURPATH] = 0 ))
	debug "Now in ${CURPATH//_/\/}"
}

function LSFile
{
	local -i SIZE=$1
	local LOC="${CURPATH}_${2#[1-9]* }"
	debug "Found file ${LOC//_/\/} size $SIZE"
	(( FILETREE[$LOC] = SIZE ))
	(( DIRTREE[$CURPATH] += SIZE ))
}

function ReadStructure
{
	local LINE
	local CURPATH CURDIR
	read LINE
	while true; do
		case "$LINE" in
			'' )
				break
				;;
			'$ cd /' )
				CDRoot
				;;
			'$ cd ..' )
				CDUp
				;;
			'$ cd '[a-z]* )
				CDDir "${LINE#$ cd }"
				;;
			'$ ls' )
				debug "Listing ${CURPATH//_/\/}"
				;;
			'dir '* )
				debug "Found path ${CURPATH//_/\/}/${LINE#dir }"
				;;
			[1-9]*' '* )
				LSFile $LINE
				;;
			* )
				error "WHAT IS THIS ? [$LINE]"
				;;
		esac
		read LINE
	done
	while [[ $CURPATH != 'ROOT' ]]; do
		CDUp
	done
}

function DoSum
{
	local P
	for P in ${!DIRTREE[@]} ; do
		if (( DIRTREE[$P] < 100000 )); then
			(( SUM += DIRTREE[$P] ))
		fi
	done
}

function SumUnder100kDirs
{
	local INPUT="$1"
	local -A FILETREE=() DIRTREE=()
	local -i SUM
	ReadStructure < $INPUT
	debug "FILES: ${FILETREE[@]@A}"
	debug "DIRS: ${DIRTREE[@]@A}"
	DoSum
	echo "Sum of paths up to 100k = $SUM"
}

SumUnder100kDirs $INPUT

