#!/bin/bash

MAPOUT=( $'\e[48;5;20;38;5;27mðŸ”´\e[0m' $'\e[48;5;64;38;5;148mâš«\e[0m' ' ' )

function printimage
{
	local -i PRINTMAP=$1
	local -i X Y N
	local -i INSET NUMLIT=0
	(( INSET = LEVELS - LEVEL + PAD ))
	for (( Y = INSET ; Y < SIZE - INSET ; Y++ )); do
		for (( X = INSET ; X < SIZE - INSET; X++ )); do
				(( N = ${IMAGE[Y]:X:1} ))
				(( NUMLIT += N ))
				(( PRINTMAP )) && echo -n "${MAPOUT[N]}"
		done
		(( PRINTMAP )) && echo
	done
	echo "At level $LEVEL lit pixels = $NUMLIT"
}

function applyfilter
{
	local -i X Y I N
	local -a NEWIMAGE=( ${IMAGE[@]} )
	for (( Y = 1 ; Y < SIZE - 1 ; Y++ )); do
		for (( X = 1 ; X < SIZE - 1 ; X++ )); do
			(( I = 2#"${IMAGE[Y-1]:X-1:3}${IMAGE[Y]:X-1:3}${IMAGE[Y+1]:X-1:3}" ))
			(( N = ${FILTER:I:1} ))
			NEWIMAGE[Y]="${NEWIMAGE[Y]:0:X}$N${NEWIMAGE[Y]:X+1}"
		done
	done
	IMAGE=( ${NEWIMAGE[@]} )
}

function enhance
{
	(( LEVELS = $1 ))
	(( PAD = LEVELS ))
	FILTER="${2//./0}"
	FILTER="${FILTER//#/1}"
	shift 2
	declare -a IMAGE=()
	(( SIZE = ${#1} ))
	if (( SIZE != $# )); then
		echo "Not square!"
		exit 1
	fi
	(( SIZE = PAD + LEVELS + SIZE + LEVELS + PAD ))
	printf -v EDGELINE "%${SIZE}s" ' '
	EDGELINE="${EDGELINE// /0}"
	printf -v EDGESIDE "%$((PAD + LEVELS))s" ' '
	EDGESIDE="${EDGESIDE// /0}"
	for (( I = 0 ; I < PAD ; I++ )); do
		IMAGE+=( "$EDGELINE" )
	done
	for (( I = 0 ; I < LEVELS ; I++ )); do
		IMAGE+=( "$EDGELINE" )
	done
	while (( $# )); do
		ROW="${1//./0}"
		IMAGE+=( "$EDGESIDE${ROW//#/1}$EDGESIDE" )
		shift
	done
	for (( I = 0 ; I < LEVELS ; I++ )); do
		IMAGE+=( "$EDGELINE" )
	done
	for (( I = 0 ; I < PAD ; I++ )); do
		IMAGE+=( "$EDGELINE" )
	done
	(( LEVEL = 0 ))
	printimage 1
	while (( LEVEL < LEVELS )); do
		applyfilter
		(( LEVEL++ ))
		printimage 1
	done
}

INPUT=( $(< input.txt ) )

enhance 2 "${INPUT[@]}"
